%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Tmux conf
file_extensions:
  - tmux.conf
  - .tmux.conf
scope: source.tmux

# MARK:--

contexts:
  main:
    # MARK: Tmux cmd

    - match: \b(bind|unbind)(-key)?\b
      scope: support.function.tmux
    - match: \b(setw|set-window-option)\b
      scope: support.function.tmux
    - match: \b(set(-option)?)\b
      scope: support.function.tmux
    - match: \b({{cmd_var}})\b
      scope: support.function.tmux

    - match: \s-[a-zA-Z]+
      scope: variable.parameter.option.tmux
    - match: \bon\b
      scope: constant.language.boolean.true.tmux
    - match: \boff\b
      scope: constant.language.boolean.false.tmux

    # MARK: str, num, cmt

    - match: "'"
      scope: punctuation.definition.string.begin.tmux
      push:
        - meta_scope: string.quoted.double.tmux
        - match: "'"
          scope: punctuation.definition.string.end.tmux
          pop: true
        - match: \\$
          scope: punctuation.separator.continuation.line.tmux

    - match: '"'
      scope: punctuation.definition.string.begin.tmux
      push:
        - meta_scope: string.quoted.double.tmux
        - match: '"'
          scope: punctuation.definition.string.end.tmux
          pop: true
        - match: \\"
          scope: constant.character.escape.tmux
        - match: (#)({)
          captures:
            1: punctuation.definition.variable.tmux
            2: punctuation.section.expansion.parameter.begin.tmux
          push: fmt_ctx
        - match: \\\$
          scope: constant.character.escape.tmux
        - match: (\$)({{shell_variable_chars_var}})
          captures:
            1: punctuation.definition.variable.shell
            2: variable.other.readwrite.shell
        - match: (\$)({)
          captures:
            1: punctuation.definition.variable.shell
            2: punctuation.section.expansion.parameter.begin.shell
          push:
            - match: \\\}
              scope: constant.character.escape.shell
            - match: \}
              scope: punctuation.section.expansion.parameter.end.shell
              pop: true
            - match: \\\$
              scope: constant.character.escape.shell
            - match: "{{shell_variable_chars_var}}"
              scope: variable.other.readwrite.shell
        - match: \\$
          scope: punctuation.separator.continuation.tmux

    - match: '\s[\+\-]\d+\b'
      scope: constant.numeric.tmux
    - match: \b\d+\b
      scope: constant.numeric.tmux

    - match: ^\s*(#.*)$
      scope: comment.line.number-sign.tmux
    - match: \s#.*
      scope: comment.line.number-sign.tmux

  # MARK:- more ctx

  fmt_ctx:
    # https://man.openbsd.org/OpenBSD-current/man1/tmux.1#FORMATS
    - meta_scope: meta.group.expansion.parameter.tmux
    - match: \\}
      scope: constant.character.escape.tmux
    - match: \}
      scope: punctuation.section.expansion.parameter.end.tmux
      pop: true
    - match: (#)({)
      captures:
        1: punctuation.definition.variable.tmux
        2: punctuation.section.expansion.parameter.begin.tmux
      push: fmt_ctx
    - match: \S
      scope: variable.other.readwrite.shell

# MARK:- variables

variables:
  shell_variable_chars_var: "[a-zA-Z_][a-zA-Z_0-9]*"
  cmd_var: "\
    {{cmd_popular_var}}|{{window_pane_cmd__var}}|{{cmd_clients_sessions_var}}|\
    {{key_cmd__var}}|{{buffer_cmd__var}}|{{cmd_copy_mode_var}}|{{status_cmd__var}}"
  cmd_popular_var: "\
    show(-messages|msgs)|source(-file)?|\
    new(-session)?|rename(-session)?|switch(-client|c)|\
    {{misc_cmd__var}}|{{env_cmd__var}}"
  # Ref: Tmux man-page: Clients and Sessions
  cmd_clients_sessions_var: "\
    attach(-session)?|detach(-client)?|has(-session)?|kill-(server|session)|\
    list-(clients|commands|sessions)|ls(c|cm)?|lock(-client|c|-session|s)|\
    refresh(-client)?|server-access|start(-server)?|suspend(-client|c)"
  # Ref: Tmux man-page: Windows and Panes: copy-mode
  # > The following commands are supported in copy mode.
  cmd_copy_mode_var: "\
    append-selection(-and-cancel)?|back-to-indentation|begin-selection|\
    bottom-line|cancel|clear-selection|\
    copy-(\
    (end-of-line(-and-cancel)?)|(line(-and-cancel)?)|\
    (pipe-end-of-line(-and-cancel)?)|\
    (pipe-line(-and-cancel)?)|\
    (pipe(-no-clear|-and-cancel)?)|\
    (selection(-no-clear|-and-cancel)?)\
    )|\
    cursor-((down(-and-cancel)?)|left|right|up)|\
    end-of-line|goto-line|\
    halfpage-(down(-and-cancel)?|up|bottom|top)|\
    jump-(again|backward|forward|reverse|to-(backward|forward|mark))|\
    middle-line|\
    next-(matching-bracket|paragraph|prompt|word(-end)?|space(-end)?)|\
    other-end|page-(down(-and-cancel)?|up)|\
    pipe(-no-clear|-and-cancel)?|\
    previous-(matching-bracket|paragraph|prompt|word|space)|\
    rectangle-(on|off|toggle)|refresh-from-pane|\
    scroll-(bottom|down(-and-cancel)?|middle|top|up)|\
    search-(again|backward(-incremental|-text)?|forward(-incremental|-text)?|reverse)|\
    select-(line|word)|set-mark|start-of-line|stop-selection|toggle-position|top-line"
  # Ref: Manual page: Windows And Panes
  # https://man.openbsd.org/OpenBSD-current/man1/tmux.1#break-pane
  window_pane_cmd__var: "\
    break(-pane|p)|capture(-pane|p)|choose-(client|tree)|customize-mode|\
    display(-panes|p)|find(-window|w)|join(-pane|p)|kill(-pane|p|-window|w)|\
    last(-pane|p|-window)?|link(-window|w)|list-(panes|windows)|ls(p|w)|\
    move(-pane|p|-window|w)|new(-window|w)|next(-layout|l|window)?|\
    pipe(-pane|p)|previous(-layout|l|-window)|prev|rename(-window|w)|\
    resize(-pane|p|-window|w)|respawn(-pane|p|-window|w)|rotate(-window|w)|\
    select(-layout|l|-pane|p|-window|w)|split(-window|w)|\
    swap(-pane|p|-window|w)|unlink(-window|w)"
  # Ref: Manual page: Key Bindings
  key_cmd__var: "list-keys|lsk|send(-keys|-prefix)?"
  # Ref: Manual page: Global And Session Environment
  env_cmd__var: "set(-environment|env)|show(-environment|env)"
  # Ref: Manual page: Status Line
  status_cmd__var: "\
    clear(-prompt-history|phist)|command-prompt|confirm(-before)?|\
    display-(menu|message|popup)|menu|display|popup|show(-prompt-history|phist)"
  # Ref: Manual page: Buffers
  buffer_cmd__var: "\
    choose-buffer|clear(-history|hist)|delete(-buffer|b)|list-buffers|lsb|\
    load(-buffer|b)|paste(-buffer|b)|save(-buffer|b)|set(-buffer|b)|show(-buffer|b)"
  # Ref: Manual page: Miscellaneous
  misc_cmd__var: "clock-mode|if(-shell)?|lock(-server)|run(-shell)?|wait(-for)?"
